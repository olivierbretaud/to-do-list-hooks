{"version":3,"sources":["reducers/todosReducer.js","contexts/TodoContext.js","components/Button.jsx","components/AddTodo.jsx","components/Todo.jsx","components/TodoList.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["VisibilityFilters","toDoReducer","state","_ref","type","payload","Object","objectSpread","filter","todos","map","item","id","completed","concat","toConsumableArray","TodoContext","createContext","initialState","TodoContextProvider","props","_useReducer","useReducer","todoReducer","_useReducer2","slicedToArray","value","dispatch","react_default","a","createElement","Provider","children","Button","disabled","onClick","AddTodo","useContext","_useState","useState","_useState2","nextToDoId","setIndex","input","initValue","arguments","length","undefined","_useState3","_useState4","setValue","onChange","e","target","resetValue","newValue","useFromInput","inputProp","objectWithoutProperties","onSubmit","preventDefault","trim","text","components_Button","Todo","style","cursor","textDecoration","color","applyFilter","Error","TodoList","listStyle","padding","todo","components_Todo","assign","key","buttonsFilter","caption","Footer","_useContext","App","className","components_AddTodo","components_TodoList","components_Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"iNAKaA,EACC,WADDA,EAEO,iBAFPA,EAGI,cA4BFC,EAzBK,SAACC,EAADC,GAA8B,IAApBC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,QAChC,OAAQD,GACJ,IAbqB,gBAcjB,OAAOE,OAAAC,EAAA,EAAAD,CAAA,GAAKJ,EAAZ,CAAmBM,OAAQH,IAC/B,IAdmB,cAef,IAAMI,EAAQP,EAAMO,MAAMC,IAAI,SAAAC,GAAI,OAC9BA,EAAKC,KAAOP,EAAQO,GAApBN,OAAAC,EAAA,EAAAD,CAAA,GAA8BK,EAASN,GAAYM,IAEvD,OAAOL,OAAAC,EAAA,EAAAD,CAAA,GAAIJ,EAAX,CAAkBO,UAEtB,IAlB4B,uBAmBxB,IAAMA,EAAQP,EAAMO,MAAMD,OAAO,SAAAG,GAC7B,OAA2B,IAAnBA,EAAKE,YAEjB,OAAOP,OAAAC,EAAA,EAAAD,CAAA,GAAIJ,EAAX,CAAkBO,UAEtB,IAzBgB,WA0BZ,IAAMA,EAAK,GAAAK,OAAAR,OAAAS,EAAA,EAAAT,CAAOJ,EAAMO,OAAb,CAAoBJ,IAC/B,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAIJ,EAAX,CAAkBO,UAEtB,QACI,OAAOP,IC7Bbc,EAAcC,0BAEdC,EAAe,CACjBV,OAAQR,EACRS,MAAO,IAGX,SAASU,EAAoBC,GAAO,IAAAC,EACNC,qBAAWC,EAAaL,GADlBM,EAAAlB,OAAAmB,EAAA,EAAAnB,CAAAe,EAAA,GAE1BK,EAAQ,CAACxB,MAFiBsB,EAAA,GAEVG,SAFUH,EAAA,IAIhC,OACII,EAAAC,EAAAC,cAACd,EAAYe,SAAb,CAAsBL,MAAOA,GAAQN,EAAMY,qBCHpCC,EAVA,SAAA9B,GAAA,IAAG+B,EAAH/B,EAAG+B,SAAUF,EAAb7B,EAAa6B,SAAUG,EAAvBhC,EAAuBgC,QAAS/B,EAAhCD,EAAgCC,KAAhC,OACXwB,EAAAC,EAAAC,cAAA,UACI1B,KAAMA,EACN+B,QAASA,EACTD,SAAUA,GAEZF,ICoCSI,MAvCC,WAAM,IACVT,EAAaU,qBAAWrB,GAAxBW,SADUW,EAEeC,mBAAS,GAFxBC,EAAAlC,OAAAmB,EAAA,EAAAnB,CAAAgC,EAAA,GAEVG,EAFUD,EAAA,GAEGE,EAFHF,EAAA,GAGZG,EA6BV,WAAsC,IAAhBC,EAAgBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAAIG,EACNT,mBAASK,GADHK,EAAA3C,OAAAmB,EAAA,EAAAnB,CAAA0C,EAAA,GAC1BtB,EAD0BuB,EAAA,GACnBC,EADmBD,EAAA,GAIlC,MAAO,CAAEvB,QAAQyB,SAFA,SAAAC,GAAC,OAAIF,EAASE,EAAEC,OAAO3B,QAEZ4B,WADT,SAAAC,GAAQ,OAAIL,EAASK,GAAYX,KAhCtCY,CAAa,IACnBF,EAA6BX,EAA7BW,WAAeG,EAJLnD,OAAAoD,EAAA,EAAApD,CAImBqC,EAJnB,gBAKlB,OACIf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QACI6B,SAAU,SAAAP,GACNA,EAAEQ,iBACGjB,EAAMjB,MAAMmC,SAGjBlC,EAAS,CACLvB,KHjBA,WGkBAC,QAAS,CACLO,GAAK6B,EACL5B,WAAW,EACXiD,KAAMnB,EAAMjB,SAGpBgB,EAASD,EAAa,GACtBa,OAGR1B,EAAAC,EAAAC,cAAA,QAAW2B,GACX7B,EAAAC,EAAAC,cAACiC,EAAD,CAAQ3D,KAAK,UAAb,eCNG4D,EArBF,SAAA7D,GAA8B,IAA3BS,EAA2BT,EAA3BS,GAAKC,EAAsBV,EAAtBU,UAAYiD,EAAU3D,EAAV2D,KACrBnC,EAAaU,qBAAWrB,GAAxBW,SACR,OACIC,EAAAC,EAAAC,cAAA,MACIK,QAAS,kBACLR,EAAS,CACLvB,KJTO,cIUPC,QAAS,CAAEO,KAAIC,WAAYA,MAGnCoD,MAAO,CACHC,OAAQ,UACRC,eAAgBtD,EAAY,eAAiB,OAC7CuD,MAAOvD,EAAY,SAAW,cAGjCiD,ICIPO,EAAc,SAACnE,GAAU,IACpBM,EAAiBN,EAAjBM,OAAQC,EAASP,EAATO,MACf,OAAQD,GACJ,KAAKR,EACD,OAAOS,EACX,KAAKT,EACD,OAAOS,EAAMD,OAAO,SAAAG,GAAI,OAAIA,EAAKE,YACrC,KAAKb,EACD,OAAOS,EAAMD,OAAO,SAAAG,GAAI,OAAKA,EAAKE,YACtC,QACI,MAAM,IAAIyD,MAAM,kBAAoB9D,KAIjC+D,EAjCE,WAAM,IACXrE,EAAUmC,qBAAWrB,GAArBd,MACFO,EAAQ4D,EAAYnE,GAC1B,OACI0B,EAAAC,EAAAC,cAAA,MACImC,MAAO,CACHO,UAAW,OACXC,QAAS,IAIThE,EAAMC,IAAI,SAAAgE,GAAI,OACV9C,EAAAC,EAAAC,cAAC6C,EAADrE,OAAAsE,OAAA,CAAMC,IAAKH,EAAK9D,IAAQ8D,QCXtCI,EAAgB,CAClB,CACIlE,GAAI,EACJmE,QAAS,MACT3E,KNVqB,gBMWrBI,OAAQR,GAEZ,CACIY,GAAI,EACJmE,QAAS,SACT3E,KNhBqB,gBMiBrBI,OAAQR,GAEZ,CACIY,GAAI,EACJmE,QAAS,YACT3E,KNtBqB,gBMuBrBI,OAAQR,GAEZ,CACIY,GAAI,EACJmE,QAAS,uBACT3E,KNzB4B,yBMgDrB4E,EAnBA,WAAM,IAAAC,EACW5C,qBAAWrB,GAA/Bd,EADS+E,EACT/E,MAAOyB,EADEsD,EACFtD,SACf,OACIC,EAAAC,EAAAC,cAAA,cACKgD,EAAcpE,IAAI,SAACC,GAChB,OACIiB,EAAAC,EAAAC,cAACiC,EAAD,CACIc,IAAKlE,EAAKC,GACVsB,SAAUhC,EAAMM,SAAWG,EAAKH,OAChC2B,QAAS,kBAAMR,EAAS,CAAEvB,KAAMO,EAAKP,KAAMC,QAASM,EAAKH,WAExDG,EAAKoE,aCpBfG,MAff,WACE,OACItD,EAAAC,EAAAC,cAACX,EAAD,KACES,EAAAC,EAAAC,cAAA,OAAKqD,UAAU,OACXvD,EAAAC,EAAAC,cAAA,UAAQqD,UAAU,cAClBvD,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACsD,EAAD,MACAxD,EAAAC,EAAAC,cAACuD,EAAD,MACAzD,EAAAC,EAAAC,cAACwD,EAAD,UCJNC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBpG,QACf8F,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,UAO5BU,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,KC1FjEC,IAASC,OAAOrF,EAAAC,EAAAC,cAACoF,EAAD,MAASC,SAASC,eAAe,SDgB1C,SAAkBrB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIqB,IAAIC,oBAAwB7B,OAAOC,SAAS6B,MACpDC,SAAW/B,OAAOC,SAAS8B,OAIvC,OAGF/B,OAAOgC,iBAAiB,OAAQ,WAC9B,IAAM3B,EAAK,GAAAhF,OAAMwG,oBAAN,sBAEP/B,GAgEV,SAAiCO,EAAOC,GAEtC2B,MAAM5B,GACHK,KAAK,SAAAwB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5ChC,UAAUC,cAAcgC,MAAM9B,KAAK,SAAAC,GACjCA,EAAa8B,aAAa/B,KAAK,WAC7BV,OAAOC,SAASyC,aAKpBtC,EAAgBC,EAAOC,KAG1Be,MAAM,WACLJ,QAAQC,IACN,mEArFAyB,CAAwBtC,EAAOC,GAI/BC,UAAUC,cAAcgC,MAAM9B,KAAK,WACjCO,QAAQC,IACN,gHAMJd,EAAgBC,EAAOC,MCvC/BE","file":"static/js/main.eccfa23b.chunk.js","sourcesContent":["export const CHANGE_FILTER = \"CHANGE_FILTER\";\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\nexport const ADD_TODO = \"ADD_TODO\";\nexport const REMOVE_ALL_COMPLETED = \"REMOVE_ALL_COMPLETED\";\n\nexport const VisibilityFilters = {\n    SHOW_ALL: \"SHOW_ALL\",\n    SHOW_COMPLETED: \"SHOW_COMPLETED\",\n    SHOW_ACTIVE: \"SHOW_ACTIVE\"\n};\n\nconst toDoReducer = (state, { type, payload }) => {\n    switch (type) {\n        case CHANGE_FILTER:\n            return { ...state, filter: payload};\n        case TOGGLE_TODO: {\n            const todos = state.todos.map(item =>\n                item.id === payload.id ? { ...item, ...payload } : item\n            );\n            return {...state, todos};\n        }\n        case REMOVE_ALL_COMPLETED: {\n            const todos = state.todos.filter(item => {\n                return  item.completed === false \n            })\n            return {...state, todos};\n        }\n        case ADD_TODO: {\n            const todos = [...state.todos, payload];\n            return {...state, todos};\n        }\n        default:\n            return state;\n    }\n};\n\nexport default toDoReducer;","import React, { useReducer, createContext } from \"react\";\nimport todoReducer, { VisibilityFilters }  from \"../reducers/todosReducer\";\n\nconst TodoContext = createContext();\n\nconst initialState = {\n    filter: VisibilityFilters.SHOW_ALL,\n    todos: []\n}\n\nfunction TodoContextProvider(props) {\n    const [state, dispatch] = useReducer(todoReducer, initialState);\n    const value = {state, dispatch};\n\n    return (\n        <TodoContext.Provider value={value}>{props.children}</TodoContext.Provider>\n    );\n\n}\n\nexport { TodoContext, TodoContextProvider};","import React from \"react\";\n\nconst Button = ({ disabled, children, onClick, type }) => (\n    <button\n        type={type}\n        onClick={onClick}\n        disabled={disabled}\n    >\n     {children}\n    </button>\n);\n\nexport default Button;","import React, {useContext, useState } from \"react\";\nimport { ADD_TODO } from \"./../reducers/todosReducer\";\nimport { TodoContext }from \"../contexts/TodoContext\";\nimport Button from \"./Button\";\n\nconst AddTodo = () => {\n    const { dispatch } = useContext(TodoContext);\n    const [ nextToDoId , setIndex] = useState(1);\n    const input = useFromInput(\"\")\n    const { resetValue, ...inputProp } = input;\n    return (\n        <div>\n            <form\n                onSubmit={e => {\n                    e.preventDefault();\n                    if (!input.value.trim()) {\n                        return;\n                    }\n                    dispatch({\n                        type: ADD_TODO,\n                        payload: {\n                            id:  nextToDoId,\n                            completed: false,\n                            text: input.value\n                        }\n                    });\n                    setIndex(nextToDoId + 1);\n                    resetValue();\n                }}\n            >\n            <input {...inputProp} />\n            <Button type=\"submit\">Add Todo</Button>\n            </form>\n        </div>\n    )\n}\n\nfunction useFromInput(initValue = \"\") {\n    const [ value, setValue ] = useState(initValue);\n    const onChange = e => setValue(e.target.value);\n    const resetValue = newValue => setValue(newValue || initValue);\n    return { value , onChange , resetValue}\n}\n\nexport default AddTodo;","import React, { useContext } from \"react\";\nimport { TOGGLE_TODO } from \"./../reducers/todosReducer\";\nimport {TodoContext} from \"../contexts/TodoContext\";\n\nconst Todo = ({ id , completed , text}) => {\n    const { dispatch } = useContext(TodoContext);\n    return (\n        <li\n            onClick={() => \n                dispatch({\n                    type: TOGGLE_TODO,\n                    payload: { id, completed: !completed}\n                })\n            }\n            style={{\n                cursor: \"pointer\",\n                textDecoration: completed ? \"line-through\" : \"none\",\n                color: completed ? \"orange\" : \"LimeGreen\",\n            }}\n            >\n            {text}\n        </li>\n    )\n}\n\nexport default Todo;","import React, { useContext } from \"react\";\nimport Todo from './Todo';\nimport { VisibilityFilters } from \"./../reducers/todosReducer\";\nimport { TodoContext } from \"../contexts/TodoContext\";\n\nconst TodoList = () => {\n    const { state } = useContext(TodoContext);\n    const todos = applyFilter(state);\n    return (\n        <ul\n            style={{\n                listStyle: \"none\",\n                padding: 0\n            }}\n            >\n            {\n                todos.map(todo => (\n                    <Todo key={todo.id} {...todo}/>\n                ))\n            }\n        </ul>\n    );\n};\n\nconst applyFilter = (state) => {\n    const {filter, todos} = state;\n    switch (filter) {\n        case VisibilityFilters.SHOW_ALL:\n            return todos;\n        case VisibilityFilters.SHOW_COMPLETED:\n            return todos.filter(item => item.completed);\n        case VisibilityFilters.SHOW_ACTIVE:\n            return todos.filter(item => !item.completed);\n        default:\n            throw new Error(\"Unknow filter: \" + filter);\n    }\n};\n\nexport default TodoList;","import React, { useContext } from \"react\";\nimport Button from \"./Button\";\n\nimport { CHANGE_FILTER, REMOVE_ALL_COMPLETED , VisibilityFilters } from \"./../reducers/todosReducer\";\nimport {TodoContext} from \"../contexts/TodoContext\";\n\nconst buttonsFilter = [\n    {\n        id: 1,\n        caption: \"All\",\n        type: CHANGE_FILTER,\n        filter: VisibilityFilters.SHOW_ALL\n    },\n    {\n        id: 2,\n        caption: \"Active\",\n        type: CHANGE_FILTER,\n        filter: VisibilityFilters.SHOW_ACTIVE\n    },\n    {\n        id: 3,\n        caption: \"Completed\",\n        type: CHANGE_FILTER,\n        filter: VisibilityFilters.SHOW_COMPLETED\n    },\n    {\n        id: 4,\n        caption: \"remove all completed\",\n        type: REMOVE_ALL_COMPLETED,\n    },\n];\n\nconst Footer = () => {\n    const { state, dispatch } = useContext(TodoContext);\n    return (\n        <footer>\n            {buttonsFilter.map((item) => {\n                return (\n                    <Button\n                        key={item.id}\n                        disabled={state.filter === item.filter}\n                        onClick={() => dispatch({ type: item.type, payload: item.filter})}\n                        >\n                        {item.caption}\n                    </Button>\n                )\n            })}\n        </footer>\n    );\n};\n\nexport default Footer;","import React from 'react';\nimport './style/css/App.css';\n\nimport { TodoContextProvider } from \"./contexts/TodoContext\"\nimport AddTodo from \"./components/AddTodo\";\nimport TodoList from \"./components/TodoList\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n      <TodoContextProvider>\n        <div className=\"App\">\n            <header className=\"App-header\">\n            <h1>To do hooks</h1>\n            <AddTodo />\n            <TodoList />\n            <Footer />\n            </header>\n        </div>\n      </TodoContextProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}